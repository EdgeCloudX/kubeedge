name: build  image to DockerHub
on:
  workflow_dispatch:
  push:
    branches:
      - ecx-*
  pull_request:
    branches:
      - ecx-*
env:
  CONTAINER_RUN_OPTIONS: " "

jobs:
  publish-image-to-dockerhub:
    name: publish to DockerHub
    strategy:
      matrix:
        target:
          - cloudcore
          - admission
          - edgesite-agent
          - edgesite-server
          - csidriver
          - iptablesmanager
          - edgemark
          - installation-package
    runs-on: ubuntu-18.04
    steps:
      - name: checkout code
        uses: actions/checkout@v2
        with:
          # fetch-depth:
          # 0 indicates all history for all branches and tags.
          # for `git describe --tags` in Makefile.
          fetch-depth: 0
      - name: install QEMU
        uses: docker/setup-qemu-action@v1
      - name: install Buildx
        uses: docker/setup-buildx-action@v1
      - name: login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: build and publish images
        env:
          IMAGE_REPO_NAME: ${{ secrets.DOCKERHUB_USERNAME }}
        run: make crossbuildimage WHAT=${{ matrix.target }}

  ecx-assests:
    name: ecx kubeedge components
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        target:
          - kubeedge
          - edgesite
          - keadm
        os:
          - linux
        arch:
          - amd64
          - arm64
          - arm
        ARM_VERSION:
          - GOARM7
          - GOARM8
          - ""
    steps:
      - name: checkout code
        uses: actions/checkout@v2
        with:
          # fetch-depth:
          # 0 indicates all history for all branches and tags.
          # for `git describe --tags` in Makefile.
          fetch-depth: 0
      - name: Install dependences
        run: |
          sudo apt-get update
          sudo apt-get install -y upx-ucl gcc-aarch64-linux-gnu libc6-dev-arm64-cross gcc-arm-linux-gnueabihf
      - name: Making and packaging
        run: |
          make release ARM_VERSION=${{ matrix.ARM_VERSION }}
      - name: Uploading assets...
        if: ${{ !env.ACT }}
        uses: softprops/action-gh-release@v1
        with:
          files: |
            _output/release/${{ github.ref_name }}/${{ matrix.target }}-${{ github.ref_name }}-${{ matrix.os }}-${{ matrix.arch }}.tar.gz
            _output/release/${{ github.ref_name }}/checksum_${{ matrix.target }}-${{ github.ref_name }}-${{ matrix.os }}-${{ matrix.arch }}.tar.gz.txt
